[
  {
    "objectID": "HW8.html",
    "href": "HW8.html",
    "title": "HW8",
    "section": "",
    "text": "library(tidyr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(psych)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.6     ✔ recipes      1.1.0\n✔ dials        1.3.0     ✔ rsample      1.2.1\n✔ ggplot2      3.5.1     ✔ tibble       3.2.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ parsnip      1.2.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.2     ✔ yardstick    1.3.1\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ ggplot2::%+%()    masks psych::%+%()\n✖ ggplot2::alpha()  masks scales::alpha(), psych::alpha()\n✖ purrr::discard()  masks scales::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n\nlibrary(stats)\nlibrary(rsample)\nlibrary(yardstick)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats 1.0.0     ✔ stringr 1.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ ggplot2::%+%()       masks psych::%+%()\n✖ ggplot2::alpha()     masks scales::alpha(), psych::alpha()\n✖ scales::col_factor() masks readr::col_factor()\n✖ purrr::discard()     masks scales::discard()\n✖ dplyr::filter()      masks stats::filter()\n✖ stringr::fixed()     masks recipes::fixed()\n✖ dplyr::lag()         masks stats::lag()\n✖ yardstick::spec()    masks readr::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(corrr)\nlibrary(parsnip)"
  },
  {
    "objectID": "HW8.html#reading-in-data",
    "href": "HW8.html#reading-in-data",
    "title": "HW8",
    "section": "Reading in Data",
    "text": "Reading in Data\n\ndata&lt;-readr::read_csv(\"SeoulBikeData.csv\",locale=locale(encoding=\"latin1\"))\n\nRows: 8760 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Date, Seasons, Holiday, Functioning Day\ndbl (10): Rented Bike Count, Hour, Temperature(°C), Humidity(%), Wind speed ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "HW8.html#checking-for-missing-values",
    "href": "HW8.html#checking-for-missing-values",
    "title": "HW8",
    "section": "Checking for Missing Values",
    "text": "Checking for Missing Values\n\nAfter checking to see if how many missing values we have in each columns we can see that there aren’t any missing values.\n\nsum_na&lt;-function(column){\n  sum(is.na(column))\n}\n\nna_counts&lt;-data|&gt;\n  summarize(across(everything(),sum_na))\nprint(na_counts)\n\n# A tibble: 1 × 14\n   Date `Rented Bike Count`  Hour `Temperature(°C)` `Humidity(%)`\n  &lt;int&gt;               &lt;int&gt; &lt;int&gt;             &lt;int&gt;         &lt;int&gt;\n1     0                   0     0                 0             0\n# ℹ 9 more variables: `Wind speed (m/s)` &lt;int&gt;, `Visibility (10m)` &lt;int&gt;,\n#   `Dew point temperature(°C)` &lt;int&gt;, `Solar Radiation (MJ/m2)` &lt;int&gt;,\n#   `Rainfall(mm)` &lt;int&gt;, `Snowfall (cm)` &lt;int&gt;, Seasons &lt;int&gt;, Holiday &lt;int&gt;,\n#   `Functioning Day` &lt;int&gt;"
  },
  {
    "objectID": "HW8.html#exploring-basic-summariesvalues",
    "href": "HW8.html#exploring-basic-summariesvalues",
    "title": "HW8",
    "section": "Exploring Basic Summaries/Values",
    "text": "Exploring Basic Summaries/Values\n\nOne of the things that sticks out to me is that each variable has the same number of observations which confirms there aren’t any missing values. We can also see which variables are numeric or not. Finally I can see that I’ll need to rename the variables to make them more user friendly.\n\npsych::describe(data)\n\n                          vars    n    mean     sd  median trimmed    mad   min\nDate*                        1 8760  183.00 105.37  183.00  183.00 134.92   1.0\nRented Bike Count            2 8760  704.60 645.00  504.50  612.58 553.75   0.0\nHour                         3 8760   11.50   6.92   11.50   11.50   8.90   0.0\nTemperature(°C)              4 8760   12.88  11.94   13.70   13.19  13.94 -17.8\nHumidity(%)                  5 8760   58.23  20.36   57.00   58.02  23.72   0.0\nWind speed (m/s)             6 8760    1.72   1.04    1.50    1.63   1.04   0.0\nVisibility (10m)             7 8760 1436.83 608.30 1698.00 1509.50 447.75  27.0\nDew point temperature(°C)    8 8760    4.07  13.06    5.10    4.76  14.38 -30.6\nSolar Radiation (MJ/m2)      9 8760    0.57   0.87    0.01    0.38   0.01   0.0\nRainfall(mm)                10 8760    0.15   1.13    0.00    0.00   0.00   0.0\nSnowfall (cm)               11 8760    0.08   0.44    0.00    0.00   0.00   0.0\nSeasons*                    12 8760    2.50   1.11    2.00    2.49   1.48   1.0\nHoliday*                    13 8760    1.95   0.22    2.00    2.00   0.00   1.0\nFunctioning Day*            14 8760    1.97   0.18    2.00    2.00   0.00   1.0\n                              max   range  skew kurtosis   se\nDate*                      365.00  364.00  0.00    -1.20 1.13\nRented Bike Count         3556.00 3556.00  1.15     0.85 6.89\nHour                        23.00   23.00  0.00    -1.20 0.07\nTemperature(°C)             39.40   57.20 -0.20    -0.84 0.13\nHumidity(%)                 98.00   98.00  0.06    -0.80 0.22\nWind speed (m/s)             7.40    7.40  0.89     0.73 0.01\nVisibility (10m)          2000.00 1973.00 -0.70    -0.96 6.50\nDew point temperature(°C)   27.20   57.80 -0.37    -0.76 0.14\nSolar Radiation (MJ/m2)      3.52    3.52  1.50     1.12 0.01\nRainfall(mm)                35.00   35.00 14.53   284.76 0.01\nSnowfall (cm)                8.80    8.80  8.44    93.73 0.00\nSeasons*                     4.00    3.00  0.00    -1.35 0.01\nHoliday*                     2.00    1.00 -4.16    15.33 0.00\nFunctioning Day*             2.00    1.00 -5.17    24.72 0.00"
  },
  {
    "objectID": "HW8.html#here-we-are-updating-our-data-set.",
    "href": "HW8.html#here-we-are-updating-our-data-set.",
    "title": "HW8",
    "section": "Here we are updating our data set.",
    "text": "Here we are updating our data set.\n\n#Fixing the Date variable\ndata$Date&lt;- dmy(data$Date)\n\n\n#Here we are changing our categorical variables to be factors.\ndata&lt;-data|&gt;\n  mutate(Seasons=as.factor(Seasons),\n         Holiday=as.factor(Holiday),\n         `Functioning Day`=as.factor(`Functioning Day`))\n\n#Here we are updating the varaible names to make them more user friendly. \n\ndata&lt;-data|&gt;\n  rename(temp=`Temperature(°C)`,hr=Hour,humidity=`Humidity(%)`,rbc=`Rented Bike Count`,ws=`Wind speed (m/s)`,vis=`Visibility (10m)`,dpttemp=`Dew point temperature(°C)`,solrad=`Solar Radiation (MJ/m2)`,rain=`Rainfall(mm)`,snow=`Snowfall (cm)`,holiday=Holiday,season=Seasons,funday=`Functioning Day`)"
  },
  {
    "objectID": "HW8.html#creating-summaries-across-categorical-variables",
    "href": "HW8.html#creating-summaries-across-categorical-variables",
    "title": "HW8",
    "section": "Creating Summaries Across Categorical variables",
    "text": "Creating Summaries Across Categorical variables"
  },
  {
    "objectID": "HW8.html#manipulating-the-original-data-set-that-we-will-use-for-analysis.",
    "href": "HW8.html#manipulating-the-original-data-set-that-we-will-use-for-analysis.",
    "title": "HW8",
    "section": "Manipulating the original data set that we will use for analysis.",
    "text": "Manipulating the original data set that we will use for analysis.\n\nModel_data&lt;-data|&gt;\n  group_by(Date,season,holiday)|&gt;\n   summarize(\n     sum_rbc=sum(rbc,na.rm=TRUE),\n     sum_rain=sum(rain,na.rm=TRUE),\n     sum_snow=sum(snow,na.rm=TRUE),\n     mean_temp=mean(temp,na.rm=TRUE),\n     mean_hum=mean(humidity,na.rm=TRUE),\n     mean_ws=mean(ws,na.rm=TRUE),\n     mean_vis=mean(vis,na.rm=TRUE),\n     mean_dpttemp=mean(dpttemp,na.rm=TRUE),\n     mean_solrad=mean(solrad,na.rm=TRUE),\n   )\n\n`summarise()` has grouped output by 'Date', 'season'. You can override using\nthe `.groups` argument."
  },
  {
    "objectID": "HW8.html#recreating-the-summaries-from-above-with-the-new-model-data.",
    "href": "HW8.html#recreating-the-summaries-from-above-with-the-new-model-data.",
    "title": "HW8",
    "section": "Recreating the summaries from above with the new model data.",
    "text": "Recreating the summaries from above with the new model data.\n\nModel_data|&gt;\n  group_by(holiday,season)|&gt;\n  summarise(across(where(is.numeric),\n                   list(\"sum\"=sum,\"mean\"=mean,\"median\"=median,\"sd\"=sd,\"min\"=min,\"max\"=max),\n                   .names=\"{.fn}_{.col}\"))\n\n`summarise()` has grouped output by 'holiday'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 56\n# Groups:   holiday [2]\n  holiday  season sum_sum_rbc mean_sum_rbc median_sum_rbc sd_sum_rbc min_sum_rbc\n  &lt;fct&gt;    &lt;fct&gt;        &lt;dbl&gt;        &lt;dbl&gt;          &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;\n1 Holiday  Autumn       91018       18204.         20060      11288.           0\n2 Holiday  Spring       45742       15247.         13790      10917.        5132\n3 Holiday  Summer       49063       24532.         24532.      8438.       18565\n4 Holiday  Winter       30072        3759           3454.      1561.        2014\n5 No Holi… Autumn     1698984       19756.         21573       9349.           0\n6 No Holi… Spring     1566167       17597.         17450       8653.           0\n7 No Holi… Summer     2234171       24824.         25572.      7324.        3231\n8 No Holi… Winter      457097        5574.          5609       1757.        2487\n# ℹ 49 more variables: max_sum_rbc &lt;dbl&gt;, sum_sum_rain &lt;dbl&gt;,\n#   mean_sum_rain &lt;dbl&gt;, median_sum_rain &lt;dbl&gt;, sd_sum_rain &lt;dbl&gt;,\n#   min_sum_rain &lt;dbl&gt;, max_sum_rain &lt;dbl&gt;, sum_sum_snow &lt;dbl&gt;,\n#   mean_sum_snow &lt;dbl&gt;, median_sum_snow &lt;dbl&gt;, sd_sum_snow &lt;dbl&gt;,\n#   min_sum_snow &lt;dbl&gt;, max_sum_snow &lt;dbl&gt;, sum_mean_temp &lt;dbl&gt;,\n#   mean_mean_temp &lt;dbl&gt;, median_mean_temp &lt;dbl&gt;, sd_mean_temp &lt;dbl&gt;,\n#   min_mean_temp &lt;dbl&gt;, max_mean_temp &lt;dbl&gt;, sum_mean_hum &lt;dbl&gt;, …"
  },
  {
    "objectID": "HW8.html#finding-the-correlation-between-all-numeric-variables-grouped-by-holiday-and-season",
    "href": "HW8.html#finding-the-correlation-between-all-numeric-variables-grouped-by-holiday-and-season",
    "title": "HW8",
    "section": "Finding the correlation between all numeric variables grouped by holiday and season",
    "text": "Finding the correlation between all numeric variables grouped by holiday and season\n\nCorrelation &lt;- Model_data |&gt;\n   group_by(holiday,season)|&gt;\n  correlate()\n\nNon-numeric variables removed from input: `Date`, `season`, and `holiday`\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'"
  },
  {
    "objectID": "HW8.html#here-is-a-visual-representation-for-the-number-of-holidays-broken-down-by-season",
    "href": "HW8.html#here-is-a-visual-representation-for-the-number-of-holidays-broken-down-by-season",
    "title": "HW8",
    "section": "Here is a visual representation for the number of holidays broken down by season",
    "text": "Here is a visual representation for the number of holidays broken down by season\n\ng &lt;- ggplot(data = Model_data , aes(x = season, fill = holiday))\ng + geom_bar()+\n labs(x = \"Season\")"
  },
  {
    "objectID": "HW8.html#here-i-thought-it-was-interesting-to-see-the-relationship-between-the-temperture-season-and-bike-rentals.",
    "href": "HW8.html#here-i-thought-it-was-interesting-to-see-the-relationship-between-the-temperture-season-and-bike-rentals.",
    "title": "HW8",
    "section": "Here I thought it was interesting to see the relationship between the temperture, season, and bike rentals.",
    "text": "Here I thought it was interesting to see the relationship between the temperture, season, and bike rentals.\n\ng &lt;- ggplot(Model_data,\n aes(x = mean_temp, y = sum_rbc, color = season))\ng + geom_point()"
  },
  {
    "objectID": "HW8.html#splitting-the-data-on-a-7525-split.",
    "href": "HW8.html#splitting-the-data-on-a-7525-split.",
    "title": "HW8",
    "section": "Splitting the data on a 75/25 split.",
    "text": "Splitting the data on a 75/25 split.\n\ndata_split&lt;-initial_split(Model_data,strata=season,prop=0.75)\ndata_training&lt;-training(data_split)\ndata_test&lt;-testing(data_split)\n\nprint(data_training)\n\n# A tibble: 273 × 12\n# Groups:   Date, season [273]\n   Date       season holiday    sum_rbc sum_rain sum_snow mean_temp mean_hum\n   &lt;date&gt;     &lt;fct&gt;  &lt;fct&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 2018-09-01 Autumn No Holiday   26010      0          0      25.5     61.2\n 2 2018-09-02 Autumn No Holiday   26881      0          0      25.0     54.5\n 3 2018-09-04 Autumn No Holiday   29529      0          0      23.3     71.6\n 4 2018-09-06 Autumn No Holiday   27838      0          0      24.2     70.8\n 5 2018-09-07 Autumn No Holiday   30381      1.5        0      22.2     56.9\n 6 2018-09-08 Autumn No Holiday   29813      0          0      21.7     48.7\n 7 2018-09-10 Autumn No Holiday   30781      0          0      22.9     50.1\n 8 2018-09-11 Autumn No Holiday   31694      0          0      21.6     48.0\n 9 2018-09-14 Autumn No Holiday   28199      0.5        0      23.5     67.2\n10 2018-09-15 Autumn No Holiday   25079      0.2        0      23.2     75.9\n# ℹ 263 more rows\n# ℹ 4 more variables: mean_ws &lt;dbl&gt;, mean_vis &lt;dbl&gt;, mean_dpttemp &lt;dbl&gt;,\n#   mean_solrad &lt;dbl&gt;\n\nprint(data_test)\n\n# A tibble: 92 × 12\n# Groups:   Date, season [92]\n   Date       season holiday    sum_rbc sum_rain sum_snow mean_temp mean_hum\n   &lt;date&gt;     &lt;fct&gt;  &lt;fct&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 2017-12-01 Winter No Holiday    9539      0        0      -2.45      45.9\n 2 2017-12-04 Winter No Holiday    8729      0.1      0      -0.304     52.5\n 3 2017-12-09 Winter No Holiday    7233      0        0      -0.846     46  \n 4 2017-12-13 Winter No Holiday    6019      0        0      -8.62      41.2\n 5 2017-12-17 Winter No Holiday    3776      0        0      -7.01      37.6\n 6 2017-12-19 Winter No Holiday    4334      0       55.6    -3.53      50.2\n 7 2017-12-21 Winter No Holiday    5734      0       38.9    -0.846     73.1\n 8 2017-12-22 Winter Holiday       7184      0        7.7     2.76      67.1\n 9 2017-12-25 Winter Holiday       3966      0        0      -2.09      43.4\n10 2017-12-28 Winter No Holiday    6594      0        0      -2.58      45.0\n# ℹ 82 more rows\n# ℹ 4 more variables: mean_ws &lt;dbl&gt;, mean_vis &lt;dbl&gt;, mean_dpttemp &lt;dbl&gt;,\n#   mean_solrad &lt;dbl&gt;"
  },
  {
    "objectID": "HW8.html#creating-a-10-fold-cv-split-on-the-training-set",
    "href": "HW8.html#creating-a-10-fold-cv-split-on-the-training-set",
    "title": "HW8",
    "section": "Creating a 10 fold cv split on the training set",
    "text": "Creating a 10 fold cv split on the training set\n\nget_cv_splits &lt;- function(data, num_folds){\n  #get fold size\n  size_fold &lt;- floor(nrow(data)/num_folds)\n  #get random indices to subset the data with\n  random_indices &lt;- sample(1:nrow(data), size = nrow(data), replace = FALSE)\n  #create a list to save our folds in\n  folds &lt;- list()\n  #now cycle through our random indices vector and take the appropriate observations to each fold\n  for(i in 1:num_folds){\n    if (i &lt; num_folds) {\n      fold_index &lt;- seq(from = (i-1)*size_fold +1, to = i*size_fold, by = 1)\n      folds[[i]] &lt;- data[random_indices[fold_index], ]\n    } else {\n      fold_index &lt;- seq(from = (i-1)*size_fold +1, to = length(random_indices), by = 1)\n      folds[[i]] &lt;- data[random_indices[fold_index], ]\n    }\n  }\n  return(folds)\n}\nfolds &lt;- get_cv_splits(data_training, 10)"
  },
  {
    "objectID": "HW8.html#creating-a-model-for-recipe-1",
    "href": "HW8.html#creating-a-model-for-recipe-1",
    "title": "HW8",
    "section": "Creating a model for recipe 1",
    "text": "Creating a model for recipe 1\n\nrec1&lt;-recipe(sum_rbc~.,data=data_training)|&gt;\n  update_role(Date,new_role = \"ID\")|&gt;\n  step_date(Date,features=\"dow\")|&gt;\n  step_mutate(DOW=factor(case_when(Date_dow==\"Sat\"|Date_dow==\"Sun\"~\"Weekend\",\n                            Date_dow==\"Mon\"|Date_dow==\"Tue\"|Date_dow==\"Wed\"|Date_dow==\"Thu\"|Date_dow==\"Fri\"~\"Weekday\")))|&gt;\n  step_rm(Date_dow)|&gt;\n  step_dummy(season,holiday,DOW)|&gt;\n  step_normalize(all_numeric(),-all_outcomes())"
  },
  {
    "objectID": "HW8.html#creating-a-model-for-recipe-2",
    "href": "HW8.html#creating-a-model-for-recipe-2",
    "title": "HW8",
    "section": "Creating a model for recipe 2",
    "text": "Creating a model for recipe 2\n\nrec2&lt;-recipe(sum_rbc~.,data=data_training)|&gt;\n  update_role(Date,new_role = \"ID\")|&gt;\n  step_date(Date,features=\"dow\")|&gt;\n  step_mutate(DOW=factor(case_when(Date_dow==\"Sat\"|Date_dow==\"Sun\"~\"Weekend\",\n                            Date_dow==\"Mon\"|Date_dow==\"Tue\"|Date_dow==\"Wed\"|Date_dow==\"Thu\"|Date_dow==\"Fri\"~\"Weekday\")))|&gt;\n  step_rm(Date_dow)|&gt;\n  step_dummy(season,holiday,DOW)|&gt;\n  step_normalize(all_numeric(),-all_outcomes())|&gt;\n  step_interact(terms = ~starts_with(\"holiday\")*starts_with(\"season\")+mean_temp*sum_rain+mean_temp*starts_with(\"season\"))"
  },
  {
    "objectID": "HW8.html#creating-a-model-for-recipe-3",
    "href": "HW8.html#creating-a-model-for-recipe-3",
    "title": "HW8",
    "section": "Creating a model for recipe 3",
    "text": "Creating a model for recipe 3\n\nrec3&lt;-recipe(sum_rbc~.,data=data_training)|&gt;\n  update_role(Date,new_role = \"ID\")|&gt;\n  step_date(Date,features=\"dow\")|&gt;\n  step_mutate(DOW=factor(case_when(Date_dow==\"Sat\"|Date_dow==\"Sun\"~\"Weekend\",\n                            Date_dow==\"Mon\"|Date_dow==\"Tue\"|Date_dow==\"Wed\"|Date_dow==\"Thu\"|Date_dow==\"Fri\"~\"Weekday\")))|&gt;\n  step_rm(Date_dow)|&gt;\n  step_dummy(season,holiday,DOW)|&gt;\n  step_normalize(all_numeric(),-all_outcomes())|&gt;\n  step_interact(terms = ~starts_with(\"holiday\")*starts_with(\"season\")+mean_temp*sum_rain+mean_temp*starts_with(\"season\"))|&gt;\n  step_poly(mean_temp,mean_ws,mean_vis,mean_dpttemp,mean_solrad,sum_rain,sum_snow,degree=2)"
  },
  {
    "objectID": "HW8.html#model-for-recipe-1",
    "href": "HW8.html#model-for-recipe-1",
    "title": "HW8",
    "section": "Model for Recipe 1",
    "text": "Model for Recipe 1\n\nmodel&lt;-linear_reg() %&gt;%\n  set_engine(\"lm\")\n\n\nwkfl&lt;- workflow() %&gt;%\n  add_recipe(rec1)%&gt;%\n  add_model(model) \nwkfl\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_date()\n• step_mutate()\n• step_rm()\n• step_dummy()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\nfit&lt;-wkfl|&gt;\n  fit(data_training)\nfit|&gt;\n  tidy()\n\n# A tibble: 14 × 5\n   term               estimate std.error statistic   p.value\n   &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 (Intercept)          16514.      353.    46.8   2.35e-128\n 2 sum_rain             -1830.      479.    -3.82  1.68e-  4\n 3 sum_snow              -259.      386.    -0.671 5.03e-  1\n 4 mean_temp            -6312.     7451.    -0.847 3.98e-  1\n 5 mean_hum             -3447.     2753.    -1.25  2.12e-  1\n 6 mean_ws               -739.      409.    -1.81  7.20e-  2\n 7 mean_vis              -771.      499.    -1.55  1.23e-  1\n 8 mean_dpttemp         10532.     8729.     1.21  2.29e-  1\n 9 mean_solrad           3860.      645.     5.98  7.33e-  9\n10 season_Spring        -1567.      490.    -3.20  1.56e-  3\n11 season_Summer         -126.      600.    -0.210 8.34e-  1\n12 season_Winter        -3314.      674.    -4.92  1.54e-  6\n13 holiday_No.Holiday    1027.      360.     2.85  4.67e-  3\n14 DOW_Weekend           -703.      359.    -1.96  5.11e-  2\n\nbike_10_fold &lt;- vfold_cv(data_training, 10)\nbike_CV_fits &lt;- wkfl |&gt;\n fit_resamples(bike_10_fold)\nbike_CV_fits\n\n# Resampling results\n# 10-fold cross-validation \n# A tibble: 10 × 4\n   splits           id     .metrics         .notes          \n   &lt;list&gt;           &lt;chr&gt;  &lt;list&gt;           &lt;list&gt;          \n 1 &lt;split [245/28]&gt; Fold01 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 2 &lt;split [245/28]&gt; Fold02 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 3 &lt;split [245/28]&gt; Fold03 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 4 &lt;split [246/27]&gt; Fold04 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 5 &lt;split [246/27]&gt; Fold05 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 6 &lt;split [246/27]&gt; Fold06 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 7 &lt;split [246/27]&gt; Fold07 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 8 &lt;split [246/27]&gt; Fold08 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n 9 &lt;split [246/27]&gt; Fold09 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n10 &lt;split [246/27]&gt; Fold10 &lt;tibble [2 × 4]&gt; &lt;tibble [0 × 3]&gt;\n\nbike_CV_fits|&gt;\n  collect_metrics()\n\n# A tibble: 2 × 6\n  .metric .estimator     mean     n  std_err .config             \n  &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard   5846.       10 386.     Preprocessor1_Model1\n2 rsq     standard      0.674    10   0.0448 Preprocessor1_Model1"
  },
  {
    "objectID": "HW8.html#model-for-recipe-2",
    "href": "HW8.html#model-for-recipe-2",
    "title": "HW8",
    "section": "Model for Recipe 2",
    "text": "Model for Recipe 2\n\nmodel&lt;-linear_reg() %&gt;%\n  set_engine(\"lm\")\n\n\nwkfl&lt;- workflow() %&gt;%\n  add_recipe(rec2)%&gt;%\n  add_model(model) \nwkfl\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n6 Recipe Steps\n\n• step_date()\n• step_mutate()\n• step_rm()\n• step_dummy()\n• step_normalize()\n• step_interact()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\nfit&lt;-wkfl|&gt;\n  fit(data_training)\nfit|&gt;\n  tidy()\n\n# A tibble: 21 × 5\n   term          estimate std.error statistic  p.value\n   &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)     21218.      968.    21.9   2.33e-60\n 2 sum_rain        -2214.      722.    -3.07  2.40e- 3\n 3 sum_snow         -214.      351.    -0.608 5.44e- 1\n 4 mean_temp       -7391.     7344.    -1.01  3.15e- 1\n 5 mean_hum        -3240.     2730.    -1.19  2.36e- 1\n 6 mean_ws          -498.      374.    -1.33  1.85e- 1\n 7 mean_vis         -146.      479.    -0.304 7.61e- 1\n 8 mean_dpttemp     9741.     8601.     1.13  2.58e- 1\n 9 mean_solrad      3413.      584.     5.84  1.61e- 8\n10 season_Spring   -1345.      440.    -3.06  2.49e- 3\n# ℹ 11 more rows"
  },
  {
    "objectID": "HW8.html#model-for-recipe-3",
    "href": "HW8.html#model-for-recipe-3",
    "title": "HW8",
    "section": "Model For Recipe 3",
    "text": "Model For Recipe 3\n\nmodel&lt;-linear_reg() %&gt;%\n  set_engine(\"lm\")\n\n\nwkfl&lt;- workflow() %&gt;%\n  add_recipe(rec2)%&gt;%\n  add_model(model) \nwkfl\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n6 Recipe Steps\n\n• step_date()\n• step_mutate()\n• step_rm()\n• step_dummy()\n• step_normalize()\n• step_interact()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\nfit&lt;-wkfl|&gt;\n  fit(data_training)\nfit|&gt;\n  tidy()\n\n# A tibble: 21 × 5\n   term          estimate std.error statistic  p.value\n   &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)     21218.      968.    21.9   2.33e-60\n 2 sum_rain        -2214.      722.    -3.07  2.40e- 3\n 3 sum_snow         -214.      351.    -0.608 5.44e- 1\n 4 mean_temp       -7391.     7344.    -1.01  3.15e- 1\n 5 mean_hum        -3240.     2730.    -1.19  2.36e- 1\n 6 mean_ws          -498.      374.    -1.33  1.85e- 1\n 7 mean_vis         -146.      479.    -0.304 7.61e- 1\n 8 mean_dpttemp     9741.     8601.     1.13  2.58e- 1\n 9 mean_solrad      3413.      584.     5.84  1.61e- 8\n10 season_Spring   -1345.      440.    -3.06  2.49e- 3\n# ℹ 11 more rows"
  }
]