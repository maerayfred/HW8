[
  {
    "objectID": "HW8.html",
    "href": "HW8.html",
    "title": "HW8",
    "section": "",
    "text": "library(tidyr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(psych)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.6     ✔ recipes      1.1.0\n✔ dials        1.3.0     ✔ rsample      1.2.1\n✔ ggplot2      3.5.1     ✔ tibble       3.2.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ parsnip      1.2.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.2     ✔ yardstick    1.3.1\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ ggplot2::%+%()    masks psych::%+%()\n✖ ggplot2::alpha()  masks scales::alpha(), psych::alpha()\n✖ purrr::discard()  masks scales::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\nlibrary(stats)\nlibrary(rsample)\nlibrary(yardstick)"
  },
  {
    "objectID": "HW8.html#reading-in-data",
    "href": "HW8.html#reading-in-data",
    "title": "HW8",
    "section": "Reading in Data",
    "text": "Reading in Data\n\ndata&lt;-readr::read_csv(\"SeoulBikeData.csv\",locale=locale(encoding=\"latin1\"))\n\nRows: 8760 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Date, Seasons, Holiday, Functioning Day\ndbl (10): Rented Bike Count, Hour, Temperature(°C), Humidity(%), Wind speed ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "HW8.html#checking-for-missing-values",
    "href": "HW8.html#checking-for-missing-values",
    "title": "HW8",
    "section": "Checking for Missing Values",
    "text": "Checking for Missing Values\n\nAfter checking to see if how many missing values we have in each columns we can see that there aren’t any missing values.\n\nsum_na&lt;-function(column){\n  sum(is.na(column))\n}\n\nna_counts&lt;-data|&gt;\n  summarize(across(everything(),sum_na))\nprint(na_counts)\n\n# A tibble: 1 × 14\n   Date `Rented Bike Count`  Hour `Temperature(°C)` `Humidity(%)`\n  &lt;int&gt;               &lt;int&gt; &lt;int&gt;             &lt;int&gt;         &lt;int&gt;\n1     0                   0     0                 0             0\n# ℹ 9 more variables: `Wind speed (m/s)` &lt;int&gt;, `Visibility (10m)` &lt;int&gt;,\n#   `Dew point temperature(°C)` &lt;int&gt;, `Solar Radiation (MJ/m2)` &lt;int&gt;,\n#   `Rainfall(mm)` &lt;int&gt;, `Snowfall (cm)` &lt;int&gt;, Seasons &lt;int&gt;, Holiday &lt;int&gt;,\n#   `Functioning Day` &lt;int&gt;"
  },
  {
    "objectID": "HW8.html#exploring-basic-summariesvalues",
    "href": "HW8.html#exploring-basic-summariesvalues",
    "title": "HW8",
    "section": "Exploring Basic Summaries/Values",
    "text": "Exploring Basic Summaries/Values\n\nOne of the things that sticks out to me is that each variable has the same number of observations which confirms there aren’t any missing values. We can also see which variables are numeric or not. Finally I can see that I’ll need to rename the variables to make them more user friendly.\n\npsych::describe(data)\n\n                          vars    n    mean     sd  median trimmed    mad   min\nDate*                        1 8760  183.00 105.37  183.00  183.00 134.92   1.0\nRented Bike Count            2 8760  704.60 645.00  504.50  612.58 553.75   0.0\nHour                         3 8760   11.50   6.92   11.50   11.50   8.90   0.0\nTemperature(°C)              4 8760   12.88  11.94   13.70   13.19  13.94 -17.8\nHumidity(%)                  5 8760   58.23  20.36   57.00   58.02  23.72   0.0\nWind speed (m/s)             6 8760    1.72   1.04    1.50    1.63   1.04   0.0\nVisibility (10m)             7 8760 1436.83 608.30 1698.00 1509.50 447.75  27.0\nDew point temperature(°C)    8 8760    4.07  13.06    5.10    4.76  14.38 -30.6\nSolar Radiation (MJ/m2)      9 8760    0.57   0.87    0.01    0.38   0.01   0.0\nRainfall(mm)                10 8760    0.15   1.13    0.00    0.00   0.00   0.0\nSnowfall (cm)               11 8760    0.08   0.44    0.00    0.00   0.00   0.0\nSeasons*                    12 8760    2.50   1.11    2.00    2.49   1.48   1.0\nHoliday*                    13 8760    1.95   0.22    2.00    2.00   0.00   1.0\nFunctioning Day*            14 8760    1.97   0.18    2.00    2.00   0.00   1.0\n                              max   range  skew kurtosis   se\nDate*                      365.00  364.00  0.00    -1.20 1.13\nRented Bike Count         3556.00 3556.00  1.15     0.85 6.89\nHour                        23.00   23.00  0.00    -1.20 0.07\nTemperature(°C)             39.40   57.20 -0.20    -0.84 0.13\nHumidity(%)                 98.00   98.00  0.06    -0.80 0.22\nWind speed (m/s)             7.40    7.40  0.89     0.73 0.01\nVisibility (10m)          2000.00 1973.00 -0.70    -0.96 6.50\nDew point temperature(°C)   27.20   57.80 -0.37    -0.76 0.14\nSolar Radiation (MJ/m2)      3.52    3.52  1.50     1.12 0.01\nRainfall(mm)                35.00   35.00 14.53   284.76 0.01\nSnowfall (cm)                8.80    8.80  8.44    93.73 0.00\nSeasons*                     4.00    3.00  0.00    -1.35 0.01\nHoliday*                     2.00    1.00 -4.16    15.33 0.00\nFunctioning Day*             2.00    1.00 -5.17    24.72 0.00"
  },
  {
    "objectID": "HW8.html#here-we-are-updating-our-data-set.",
    "href": "HW8.html#here-we-are-updating-our-data-set.",
    "title": "HW8",
    "section": "Here we are updating our data set.",
    "text": "Here we are updating our data set.\n\n#Fixing the Date variable\ndata$Date&lt;- dmy(data$Date)\n\n\n#Here we are changing our categorical variables to be factors.\ndata&lt;-data|&gt;\n  mutate(Seasons=as.factor(Seasons),\n         Holiday=as.factor(Holiday),\n         `Functioning Day`=as.factor(`Functioning Day`))\n\n#Here we are updating the varaible names to make them more user friendly. \n\ndata&lt;-data|&gt;\n  rename(temp=`Temperature(°C)`,hr=Hour,humidity=`Humidity(%)`,rbc=`Rented Bike Count`,ws=`Wind speed (m/s)`,vis=`Visibility (10m)`,dpttemp=`Dew point temperature(°C)`,solrad=`Solar Radiation (MJ/m2)`,rain=`Rainfall(mm)`,snow=`Snowfall (cm)`,holiday=Holiday,season=Seasons,funday=`Functioning Day`)"
  },
  {
    "objectID": "HW8.html#section",
    "href": "HW8.html#section",
    "title": "HW8",
    "section": "",
    "text": "data|&gt;\n  group_by(funday)|&gt;\n  summarise(across(where(is.numeric),\n                   list(\"sum\"=sum,\"mean\"=mean,\"median\"=median,\"sd\"=sd,\"min\"=min,\"max\"=max),\n                   .names=\"{.fn}_{.col}\"))\n\n# A tibble: 2 × 61\n  funday sum_rbc mean_rbc median_rbc sd_rbc min_rbc max_rbc sum_hr mean_hr\n  &lt;fct&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 No           0       0           0     0        0       0   3333    11.3\n2 Yes    6172314     729.        542   642.       2    3556  97407    11.5\n# ℹ 52 more variables: median_hr &lt;dbl&gt;, sd_hr &lt;dbl&gt;, min_hr &lt;dbl&gt;,\n#   max_hr &lt;dbl&gt;, sum_temp &lt;dbl&gt;, mean_temp &lt;dbl&gt;, median_temp &lt;dbl&gt;,\n#   sd_temp &lt;dbl&gt;, min_temp &lt;dbl&gt;, max_temp &lt;dbl&gt;, sum_humidity &lt;dbl&gt;,\n#   mean_humidity &lt;dbl&gt;, median_humidity &lt;dbl&gt;, sd_humidity &lt;dbl&gt;,\n#   min_humidity &lt;dbl&gt;, max_humidity &lt;dbl&gt;, sum_ws &lt;dbl&gt;, mean_ws &lt;dbl&gt;,\n#   median_ws &lt;dbl&gt;, sd_ws &lt;dbl&gt;, min_ws &lt;dbl&gt;, max_ws &lt;dbl&gt;, sum_vis &lt;dbl&gt;,\n#   mean_vis &lt;dbl&gt;, median_vis &lt;dbl&gt;, sd_vis &lt;dbl&gt;, min_vis &lt;dbl&gt;, …\n\n\n\nModel_data&lt;-data|&gt;\n  group_by(Date,season,holiday)|&gt;\n   summarize(\n     sum_rbc=sum(rbc,na.rm=TRUE),\n     sum_rain=sum(rain,na.rm=TRUE),\n     sum_snow=sum(snow,na.rm=TRUE),\n     mean_temp=mean(temp,na.rm=TRUE),\n     mean_hum=mean(humidity,na.rm=TRUE),\n     mean_ws=mean(ws,na.rm=TRUE),\n     mean_vis=mean(vis,na.rm=TRUE),\n     mean_dpttemp=mean(dpttemp,na.rm=TRUE),\n     mean_solrad=mean(solrad,na.rm=TRUE),\n   )\n\n`summarise()` has grouped output by 'Date', 'season'. You can override using\nthe `.groups` argument.\n\n\n\nsplit&lt;-initial_split(Model_data,strata=season,prop=0.75)\ndata_training&lt;-training(split)\ndata_test&lt;-testing(split)\n\nprint(data_training)\n\n# A tibble: 273 × 12\n# Groups:   Date, season [273]\n   Date       season holiday    sum_rbc sum_rain sum_snow mean_temp mean_hum\n   &lt;date&gt;     &lt;fct&gt;  &lt;fct&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 2018-09-02 Autumn No Holiday   26881      0          0      25.0     54.5\n 2 2018-09-03 Autumn No Holiday   10802     34.5        0      23.6     82.2\n 3 2018-09-04 Autumn No Holiday   29529      0          0      23.3     71.6\n 4 2018-09-05 Autumn No Holiday   31114      0          0      23.8     61.8\n 5 2018-09-06 Autumn No Holiday   27838      0          0      24.2     70.8\n 6 2018-09-07 Autumn No Holiday   30381      1.5        0      22.2     56.9\n 7 2018-09-08 Autumn No Holiday   29813      0          0      21.7     48.7\n 8 2018-09-09 Autumn No Holiday   28354      0          0      22.0     49.5\n 9 2018-09-10 Autumn No Holiday   30781      0          0      22.9     50.1\n10 2018-09-11 Autumn No Holiday   31694      0          0      21.6     48.0\n# ℹ 263 more rows\n# ℹ 4 more variables: mean_ws &lt;dbl&gt;, mean_vis &lt;dbl&gt;, mean_dpttemp &lt;dbl&gt;,\n#   mean_solrad &lt;dbl&gt;\n\nprint(data_test)\n\n# A tibble: 92 × 12\n# Groups:   Date, season [92]\n   Date       season holiday    sum_rbc sum_rain sum_snow mean_temp mean_hum\n   &lt;date&gt;     &lt;fct&gt;  &lt;fct&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 2017-12-04 Winter No Holiday    8729      0.1      0     -0.304      52.5\n 2 2017-12-08 Winter No Holiday    8032      0        0     -3.82       41.8\n 3 2017-12-10 Winter No Holiday    3453      4.1     32.5    1.19       69.7\n 4 2017-12-14 Winter No Holiday    6398      0        0     -6.87       42.5\n 5 2017-12-18 Winter No Holiday    2620      3.4     59.7   -1.97       77  \n 6 2017-12-19 Winter No Holiday    4334      0       55.6   -3.53       50.2\n 7 2017-12-21 Winter No Holiday    5734      0       38.9   -0.846      73.1\n 8 2017-12-22 Winter Holiday       7184      0        7.7    2.76       67.1\n 9 2017-12-31 Winter Holiday       3423      1.2     14.3    0.0875     59.1\n10 2018-01-10 Winter No Holiday    4161      0.8     10.2   -7.03       54.2\n# ℹ 82 more rows\n# ℹ 4 more variables: mean_ws &lt;dbl&gt;, mean_vis &lt;dbl&gt;, mean_dpttemp &lt;dbl&gt;,\n#   mean_solrad &lt;dbl&gt;\n\n\n\nget_cv_splits &lt;- function(data, num_folds){\n  #get fold size\n  size_fold &lt;- floor(nrow(data)/num_folds)\n  #get random indices to subset the data with\n  random_indices &lt;- sample(1:nrow(data), size = nrow(data), replace = FALSE)\n  #create a list to save our folds in\n  folds &lt;- list()\n  #now cycle through our random indices vector and take the appropriate observations to each fold\n  for(i in 1:num_folds){\n    if (i &lt; num_folds) {\n      fold_index &lt;- seq(from = (i-1)*size_fold +1, to = i*size_fold, by = 1)\n      folds[[i]] &lt;- data[random_indices[fold_index], ]\n    } else {\n      fold_index &lt;- seq(from = (i-1)*size_fold +1, to = length(random_indices), by = 1)\n      folds[[i]] &lt;- data[random_indices[fold_index], ]\n    }\n  }\n  return(folds)\n}\nfolds &lt;- get_cv_splits(data_training, 10)\n\n\nrec1&lt;-recipe(sum_rbc~.,data=data_training)|&gt;\n  update_role(Date,new_role = \"ID\")|&gt;\n  step_date(Date,features=\"dow\")|&gt;\n  step_mutate(DOW=factor(case_when(Date_dow==\"Sat\"|Date_dow==\"Sun\"~\"Weekend\",\n                            Date_dow==\"Mon\"|Date_dow==\"Tue\"|Date_dow==\"Wed\"|Date_dow==\"Thu\"|Date_dow==\"Fri\"~\"Weekday\")))|&gt;\n  step_rm(Date_dow)|&gt;\n  step_dummy(season,holiday,DOW)|&gt;\n  step_normalize(all_numeric(),-all_outcomes())\n\n\nrec2&lt;-recipe(sum_rbc~.,data=data_training)|&gt;\n  update_role(Date,new_role = \"ID\")|&gt;\n  step_date(Date,features=\"dow\")|&gt;\n  step_mutate(DOW=factor(case_when(Date_dow==\"Sat\"|Date_dow==\"Sun\"~\"Weekend\",\n                            Date_dow==\"Mon\"|Date_dow==\"Tue\"|Date_dow==\"Wed\"|Date_dow==\"Thu\"|Date_dow==\"Fri\"~\"Weekday\")))|&gt;\n  step_rm(Date_dow)|&gt;\n  step_dummy(season,holiday,DOW)|&gt;\n  step_normalize(all_numeric(),-all_outcomes())|&gt;\n  step_interact(terms = ~starts_with(\"holiday\")*starts_with(\"season\")+mean_temp*sum_rain+mean_temp*starts_with(\"season\"))\n\n\nrec3&lt;-recipe(sum_rbc~.,data=data_training)|&gt;\n  update_role(Date,new_role = \"ID\")|&gt;\n  step_date(Date,features=\"dow\")|&gt;\n  step_mutate(DOW=factor(case_when(Date_dow==\"Sat\"|Date_dow==\"Sun\"~\"Weekend\",\n                            Date_dow==\"Mon\"|Date_dow==\"Tue\"|Date_dow==\"Wed\"|Date_dow==\"Thu\"|Date_dow==\"Fri\"~\"Weekday\")))|&gt;\n  step_rm(Date_dow)|&gt;\n  step_dummy(season,holiday,DOW)|&gt;\n  step_normalize(all_numeric(),-all_outcomes())|&gt;\n  step_interact(terms = ~starts_with(\"holiday\")*starts_with(\"season\")+mean_temp*sum_rain+mean_temp*starts_with(\"season\"))|&gt;\n  step_poly(mean_temp,mean_ws,mean_vis,mean_dpttemp,mean_solrad,sum_rain,sum_snow,degree=2)\n\n\nmodel&lt;-linear_reg() %&gt;%\n  set_engine(\"lm\")\n\n\nwkfl&lt;- workflow() %&gt;%\n  add_recipe(rec1)%&gt;%\n  add_model(model) \nwkfl\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_date()\n• step_mutate()\n• step_rm()\n• step_dummy()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\nfit&lt;-wkfl|&gt;\n  fit(data_training)\nfit|&gt;\n  tidy()\n\n# A tibble: 14 × 5\n   term               estimate std.error statistic   p.value\n   &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 (Intercept)          16711.      348.    48.0   7.56e-131\n 2 sum_rain             -1709.      465.    -3.67  2.92e-  4\n 3 sum_snow              -189.      371.    -0.509 6.11e-  1\n 4 mean_temp            -2417.     6671.    -0.362 7.17e-  1\n 5 mean_hum             -2632.     2591.    -1.02  3.11e-  1\n 6 mean_ws              -1021.      396.    -2.58  1.05e-  2\n 7 mean_vis              -185.      507.    -0.365 7.16e-  1\n 8 mean_dpttemp          6993.     7985.     0.876 3.82e-  1\n 9 mean_solrad           3501.      634.     5.52  8.05e-  8\n10 season_Spring        -1480.      477.    -3.10  2.15e-  3\n11 season_Summer         -299.      586.    -0.511 6.10e-  1\n12 season_Winter        -2844.      680.    -4.18  3.94e-  5\n13 holiday_No.Holiday    1091.      359.     3.04  2.65e-  3\n14 DOW_Weekend           -754.      355.    -2.12  3.49e-  2"
  }
]